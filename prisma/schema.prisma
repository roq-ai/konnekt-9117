generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?    @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  user       user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase   purchase[]
}

model event {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @db.VarChar(255)
  seating_chart   String        @db.VarChar(255)
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket          ticket[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  event       event[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model purchase {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id String?   @db.Uuid
  ticket_id   String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  customer    customer? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket      ticket?   @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ticket {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  price        Int
  availability Int
  event_id     String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  purchase     purchase[]
  event        event?     @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  customer     customer[]
  organization organization[]
}
